services:
  financial_migration:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    command: migrate
    environment:
      - DB_DRIVER=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=mysql
      - DB_PASSWORD=mysql
      - DB_NAME=financial
      - DB_MAX_IDLE_CONNS=10
      - MIGRATE_PATH=file://migrations/financial
    depends_on:
      - mysql

  financial:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    ports:
      - "8000:80"
    command: "api"
    environment:
      - DEVELOPMENT_MODE=true
      - HTTP_SERVER_PORT=80
      - DB_DRIVER=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=mysql
      - DB_PASSWORD=mysql
      - DB_NAME=financial
      - DB_MAX_IDLE_CONNS=10
      - AUTH_EXPIRATION_AT=8
      - AUTH_SECRET_KEY="RmluYW5jaWFsQ29udHJvbEFtYmllbnRlUHJvZHVjdGlvbg=="
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel_collector:4317
    depends_on:
      - financial_migration

  mysql:
    image: mysql:8.1.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: financial
      MYSQL_DATABASE: financial
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    ports:
      - "3306:3306"
    volumes:
      - .docker/mysql:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3.13.1-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: pass@rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ~/gmp-test-sa-key.json:/etc/otel/key.json
      - ./observability/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/otel/key.json
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
      - "55681:55681"
    depends_on:
      - jaeger

  prometheus:
    image: prom/prometheus:v2.51.2
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.2
    volumes:
      - ./observability/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"

  jaeger:
    image: jaegertracing/all-in-one:1
    ports:
      - "16686:16686"
      - "14250:14250"

volumes:
  mysql:
